#!/usr/bin/python

import random
import os, os.path

def list_content():
    root = "/home/ben/Documents/english_courses/source_files/"
    tests = os.listdir(root)

    i = 0 
    print "----------------------------"
    print "TEST LIST"
    print 

    for elem in tests :
        print str(i) + ": "+ elem
        i = i+1

    print 
    choice = raw_input("Choose a Test :")
    path =  root+tests[int(choice)]
    print
    get_source(path)


def get_source(path):

    with open(path, 'r') as inf:
        data = eval(inf.read())

    modeDict = ["Standard", "Reverse"]
    if isinstance(data, dict):
        i = 0
        for elem in modeDict :
            print str(i) + ": "+elem
            i = i+1
        
        print 
        mode = raw_input("Choose Mode :")
        parse_input(data, modeDict[int(mode)]) 

    # return dict_from_file



def parse_input(source, mode = "Standard"):
    # source = get_source(path)

    print
    print "----------------------------"
    print "STARTED..."
    print "----------------------------"
    print 

    size = len(source)
    keylist = random.sample(source, size)
    i = size
    score = []

    if mode == "Standard" :
        for elem in keylist :
            print "----------------------------"
            print str(i)+"/"+str(size)
            print
            i = i-1

            raw_input(elem+" >>> ")
            print "\nFR"
            for fr in  source[elem][0]:
                print "\t"+fr
            print "\nENG"
            for en in source[elem][1]:
                print "\t"+en

            print
            try :
                result = int(raw_input("success 0 or 1 :"))
            except ValueError:
                result = 0

            result = 1 if result >= 1 else 0
            score.append(int(float(result)))

    if mode == "Reverse" :
        for elem in keylist :
            print "----------------------------"
            print str(i)+"/"+str(size)
            print
            i = i-1

            raw_input(", ".join(source[elem][0])+" >>> ")
            print "\nVERB"
            print "\t"+elem
            print "\nENG"
            for en in source[elem][1]:
                print "\t"+en

            print
            try :
                result = int(raw_input("success 0 or 1 :"))
            except ValueError:
                result = 0

            result = 1 if result >= 1 else 0
            print result
            score.append(int(float(result)))

    print
    print "----------------------------"
    print "SCORE"
    print str(round((sum(score)/float(size))*20, 2))+" / 20"
    print "----------------------------"

# parse_input('/home/ben/Documents/english_courses/source_files/phrasal_verbs.py', "reverse")
list_content()
